<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Demo.Web</name>
    </assembly>
    <members>
        <member name="T:Demo.Web.Controllers.OrdersController">
            <summary>
            Orders endpoint.
            </summary>
        </member>
        <member name="M:Demo.Web.Controllers.OrdersController.#ctor(Demo.Services.Orders.IOrderService,AutoMapper.IMapper)">
            <summary>
            Ctor.
            </summary>
        </member>
        <member name="M:Demo.Web.Controllers.OrdersController.ListAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Lists all existing orders.
            </summary>
            <param name="cancellationToken">A token to observe while waiting for the task to complete.</param>
            <returns>List of products.</returns>
        </member>
        <member name="M:Demo.Web.Controllers.OrdersController.PostAsync(Demo.Services.Orders.CreateOrderRequest,System.Threading.CancellationToken)">
            <summary>
            Saves a new order.
            </summary>
            <param name="resource">Order data.</param>
            <param name="cancellationToken">A token to observe while waiting for the task to complete.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="T:Demo.Web.Controllers.ProductsController">
            <summary>
            Products endpoint.
            </summary>
        </member>
        <member name="M:Demo.Web.Controllers.ProductsController.#ctor(Demo.Services.Products.IProductService,AutoMapper.IMapper)">
            <summary>
            Ctor.
            </summary>
        </member>
        <member name="M:Demo.Web.Controllers.ProductsController.ListAsync(System.Threading.CancellationToken)">
            <summary>
            Lists all existing products.
            </summary>
            <param name="cancellationToken">A token to observe while waiting for the task to complete.</param>
            <returns>List of products.</returns>
        </member>
        <member name="M:Demo.Web.Controllers.ProductsController.PostAsync(Demo.Services.Products.CreateProductRequest,System.Threading.CancellationToken)">
            <summary>
            Saves a new product.
            </summary>
            <param name="resource">Product data.</param>
            <param name="cancellationToken">A token to observe while waiting for the task to complete.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:Demo.Web.Controllers.ProductsController.PutAsync(System.Guid,Demo.Services.Products.UpdateProductRequest,System.Threading.CancellationToken)">
            <summary>
            Updates an existing product according to an identifier.
            </summary>
            <param name="id">Product identifier.</param>
            <param name="resource">Product data.</param>
            <param name="cancellationToken">A token to observe while waiting for the task to complete.</param>
            <returns>Response for the request.</returns>
        </member>
        <member name="M:Demo.Web.Controllers.ProductsController.DeleteAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Deletes a given product according to an identifier.
            </summary>
            <param name="id">Product identifier.</param>
            <param name="cancellationToken">A token to observe while waiting for the task to complete.</param>
            <returns>Response for the request.</returns>
        </member>
    </members>
</doc>
